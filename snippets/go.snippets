# korben add some go snippets.

# import test
snippet imt
	import (
		"testing"
		"github.com/mabetle/mgo/mcore/mtest"
	)

	${0}
# import mlog.
snippet ilog
	"github.com/mabetle/mgo/mlog"
# import mlog
snippet imlog
	import(
		"github.com/mabetle/mgo/mlog"
	)
# test func
snippet fnt
	func Test${1:XXX}(t *testing.T){
		mtest.RegTest(t)
		mtest.Assert${2:Equal}(${3:true},${4:true})
	}

	${0}
# funci
snippet fni
	func init(){
		${1}
	}

	${0}
# main()
snippet ma
	func main() {
		${1}
	}
	${0}

# package main
snippet pm
	package main
	
	import(
		"fmt"
		"github.com/mabetle/mgo/mlog"
	)

	var(
		logger = mlog.GetLogger("main")
	)

	func main() {
		mlog.SetDebugLevel()
		${1}

		fmt.Println("===End===")
	}

	${0}
# prl
snippet prl
	fmt.Println("${1}")
# type
snippet tys
	type ${1:name} struct{
		${2}
	}
	${0}
# type
snippet tyi
	type ${1:name} interface{
		${2}
	}
	${0}
# log methods.
snippet logi
	logger.Info("${1}")
snippet loge
	logger.Error("${1}")
snippet logw
	logger.Warn("${1}")
snippet logd
	logger.Debug("${1}")
snippet logt
	logger.Trace("${1}")
snippet logif
	logger.Infof("%s${1}",${2})
snippet logef
	logger.Errorf("%s${1}",${2})
snippet logdf
	logger.Debugf("%s${1}",${2})
snippet logwf
	logger.Warnf("%s${1}",${2})
snippet logtf
	logger.Tracef("%s${1}",${2})
# check error.
snippet ice
	if logger.CheckError(${1:err}){
		${2}
	}
snippet ce
	logger.CheckError(${1:err})
# define logger
snippet log
	logger = mlog.GetLogger("mabetle/${1}")
# var logger
snippet vlog
	var(
		logger = mlog.GetLogger("mabetle/${1}")
	)
# revel func
snippet rfn
	func (c ${1})${2}()revel.Result{
		${3}
		return c.Render()
	}
# import revel
snippet imr
	import(
		"github.com/revel/revel"
	)
# import revel line
snippet imrl
	"github.com/revel/revel"

# xid xorm id
snippet xid
	Id string `xorm:"varchar(50) not null pk"`


